
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightPOWERleftPLUSMINUSleftTIMESDIVIDErightUMINUSleftANDORleftEQUAL_EQUALNOT_EQUALGREATERGREATER_EQUALLESSLESS_EQUALAND APPEND BREAK COLON COMMA COMMENT DEF DIVIDE DOT ELIF ELSE EQUALS EQUAL_EQUAL FALSE FLOAT FOR GREATER GREATER_EQUAL ID IF IN INPUT INT LBRACE LBRACKET LESS LESS_EQUAL LPAREN MINUS NEW NEWLINE NOT NOT_EQUAL NUMBER OR PLUS POWER PRINT RANGE RBRACE RBRACKET RETURN RPAREN SEMICOLON STRING TIMES TRUE TYPE WHILEprogram : statementsstatements : statement NEWLINE statements\n                  | statement statements\n                  | statement\n                  | emptyempty :statement : print_stmt\n                 | assignment_stmt\n                 | input_stmt\n                 | if_stmt\n                 | while_stmt\n                 | for_stmt\n                 | list_stmt\n                 | function_def\n                 | function_call\n                 | return_stmt\n                 | break_stmt\n                 | expressionfunction_def : DEF ID LPAREN parameter_list RPAREN COLON NEWLINE statements\n                   | DEF ID LPAREN RPAREN COLON NEWLINE statementsparameter_list : ID\n                     | ID COMMA parameter_listfunction_call : ID LPAREN argument_list RPAREN\n                    | ID LPAREN RPARENargument_list : expression\n                    | expression COMMA argument_listreturn_stmt : RETURN expression\n                  | RETURNexpression : function_callprint_stmt : PRINT LPAREN expression RPARENassignment_stmt : ID EQUALS expressioninput_stmt : ID EQUALS INPUT LPAREN STRING RPAREN\n                 | input_multipleinput_multiple : id_list EQUALS INPUT LPAREN STRING RPARENid_list : ID COMMA ID\n               | ID COMMA id_listlist_stmt : ID EQUALS LBRACKET list_elements RBRACKET\n                | ID EQUALS LBRACKET RBRACKETlist_elements : expression\n                    | expression COMMA list_elementsexpression : ID LBRACKET expression RBRACKET\n                 | ID DOT APPEND LPAREN expression RPARENbreak_stmt : BREAKif_stmt : IF expression COLON NEWLINE statements elif_stmt else_stmt\n               | IF expression COLON statements elif_stmt else_stmtelif_stmt : ELIF expression COLON NEWLINE statements elif_stmt\n                 | ELIF expression COLON statements elif_stmt\n                 | emptyelse_stmt : ELSE COLON NEWLINE statements\n                 | ELSE COLON statements\n                 | emptywhile_stmt : WHILE expression COLON NEWLINE statementsfor_stmt : FOR ID IN RANGE LPAREN expression COMMA expression RPAREN COLON NEWLINE statementsexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression\n                  | expression POWER expression\n                  | expression AND expression\n                  | expression OR expression\n                  | expression EQUAL_EQUAL expression\n                  | expression NOT_EQUAL expression\n                  | expression GREATER expression\n                  | expression GREATER_EQUAL expression\n                  | expression LESS expression\n                  | expression LESS_EQUAL expressionexpression : MINUS expression %prec UMINUS\n                  | NOT expressionexpression : LPAREN expression RPARENexpression : NUMBER\n                  | FLOAT\n                  | INTexpression : STRINGexpression : TRUE\n                  | FALSEexpression : ID'
    
_lr_action_items = {'$end':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,19,20,21,26,27,30,31,32,33,34,36,37,53,54,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,88,94,99,102,104,106,108,109,110,117,121,122,124,125,131,133,134,135,137,142,143,144,145,146,148,149,150,151,152,153,155,156,157,158,160,162,163,],[-6,0,-1,-4,-5,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-76,-73,-33,-28,-43,-70,-71,-72,-74,-75,-6,-3,-29,-76,-27,-67,-68,-2,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-69,-31,-24,-6,-30,-38,-23,-41,-6,-6,-6,-37,-6,-6,-48,-52,-32,-42,-6,-45,-51,-6,-34,-44,-6,-6,-6,-20,-6,-50,-6,-6,-19,-49,-6,-47,-46,-6,-53,]),'PRINT':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,19,20,21,26,27,30,31,32,33,34,36,37,53,54,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,88,94,99,102,104,106,108,109,110,117,121,122,124,125,131,133,134,135,137,142,143,144,145,146,148,149,150,151,152,153,155,156,157,158,160,162,163,],[17,17,-5,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-76,-73,-33,-28,-43,-70,-71,-72,-74,-75,17,-3,-29,-76,-27,-67,-68,-2,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-69,-31,-24,17,-30,-38,-23,-41,17,-6,17,-37,-6,-6,-48,-52,-32,-42,-6,-45,-51,17,-34,-44,17,17,17,-20,17,-50,17,-6,-19,-49,-6,-47,-46,17,-53,]),'ID':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,57,59,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,86,88,94,97,99,102,104,105,106,107,108,109,110,117,118,121,122,123,124,125,126,127,131,133,134,135,137,142,143,144,145,146,147,148,149,150,151,152,153,155,156,157,158,160,162,163,],[19,19,-5,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,54,-76,-73,-33,54,54,62,63,54,-43,54,54,-70,-71,-72,-74,-75,19,-3,54,54,54,54,54,54,54,54,54,54,54,54,54,54,-29,-76,54,54,54,92,-27,-67,-68,-2,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-69,-31,54,-24,19,112,-30,-38,-23,54,-41,54,19,-6,19,-37,54,-6,-6,54,-48,-52,54,112,-32,-42,-6,-45,-51,19,-34,-44,19,19,54,19,-20,19,-50,19,-6,-19,-49,-6,-47,-46,19,-53,]),'IF':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,19,20,21,26,27,30,31,32,33,34,36,37,53,54,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,88,94,99,102,104,106,108,109,110,117,121,122,124,125,131,133,134,135,137,142,143,144,145,146,148,149,150,151,152,153,155,156,157,158,160,162,163,],[22,22,-5,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-76,-73,-33,-28,-43,-70,-71,-72,-74,-75,22,-3,-29,-76,-27,-67,-68,-2,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-69,-31,-24,22,-30,-38,-23,-41,22,-6,22,-37,-6,-6,-48,-52,-32,-42,-6,-45,-51,22,-34,-44,22,22,22,-20,22,-50,22,-6,-19,-49,-6,-47,-46,22,-53,]),'WHILE':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,19,20,21,26,27,30,31,32,33,34,36,37,53,54,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,88,94,99,102,104,106,108,109,110,117,121,122,124,125,131,133,134,135,137,142,143,144,145,146,148,149,150,151,152,153,155,156,157,158,160,162,163,],[23,23,-5,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-76,-73,-33,-28,-43,-70,-71,-72,-74,-75,23,-3,-29,-76,-27,-67,-68,-2,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-69,-31,-24,23,-30,-38,-23,-41,23,-6,23,-37,-6,-6,-48,-52,-32,-42,-6,-45,-51,23,-34,-44,23,23,23,-20,23,-50,23,-6,-19,-49,-6,-47,-46,23,-53,]),'FOR':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,19,20,21,26,27,30,31,32,33,34,36,37,53,54,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,88,94,99,102,104,106,108,109,110,117,121,122,124,125,131,133,134,135,137,142,143,144,145,146,148,149,150,151,152,153,155,156,157,158,160,162,163,],[24,24,-5,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-76,-73,-33,-28,-43,-70,-71,-72,-74,-75,24,-3,-29,-76,-27,-67,-68,-2,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-69,-31,-24,24,-30,-38,-23,-41,24,-6,24,-37,-6,-6,-48,-52,-32,-42,-6,-45,-51,24,-34,-44,24,24,24,-20,24,-50,24,-6,-19,-49,-6,-47,-46,24,-53,]),'DEF':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,19,20,21,26,27,30,31,32,33,34,36,37,53,54,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,88,94,99,102,104,106,108,109,110,117,121,122,124,125,131,133,134,135,137,142,143,144,145,146,148,149,150,151,152,153,155,156,157,158,160,162,163,],[25,25,-5,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-76,-73,-33,-28,-43,-70,-71,-72,-74,-75,25,-3,-29,-76,-27,-67,-68,-2,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-69,-31,-24,25,-30,-38,-23,-41,25,-6,25,-37,-6,-6,-48,-52,-32,-42,-6,-45,-51,25,-34,-44,25,25,25,-20,25,-50,25,-6,-19,-49,-6,-47,-46,25,-53,]),'RETURN':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,19,20,21,26,27,30,31,32,33,34,36,37,53,54,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,88,94,99,102,104,106,108,109,110,117,121,122,124,125,131,133,134,135,137,142,143,144,145,146,148,149,150,151,152,153,155,156,157,158,160,162,163,],[26,26,-5,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-76,-73,-33,-28,-43,-70,-71,-72,-74,-75,26,-3,-29,-76,-27,-67,-68,-2,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-69,-31,-24,26,-30,-38,-23,-41,26,-6,26,-37,-6,-6,-48,-52,-32,-42,-6,-45,-51,26,-34,-44,26,26,26,-20,26,-50,26,-6,-19,-49,-6,-47,-46,26,-53,]),'BREAK':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,19,20,21,26,27,30,31,32,33,34,36,37,53,54,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,88,94,99,102,104,106,108,109,110,117,121,122,124,125,131,133,134,135,137,142,143,144,145,146,148,149,150,151,152,153,155,156,157,158,160,162,163,],[27,27,-5,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-76,-73,-33,-28,-43,-70,-71,-72,-74,-75,27,-3,-29,-76,-27,-67,-68,-2,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-69,-31,-24,27,-30,-38,-23,-41,27,-6,27,-37,-6,-6,-48,-52,-32,-42,-6,-45,-51,27,-34,-44,27,27,27,-20,27,-50,27,-6,-19,-49,-6,-47,-46,27,-53,]),'MINUS':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,60,61,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,88,89,90,94,99,102,103,104,105,106,107,108,109,110,117,118,120,121,122,123,124,125,126,131,133,134,135,137,138,139,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,160,162,163,],[28,28,-5,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,39,28,-76,-73,-33,28,28,28,-43,28,28,-70,-71,-72,-74,-75,28,-3,28,28,28,28,28,28,28,28,28,28,28,28,28,28,39,-29,-76,28,28,28,39,39,39,-67,39,-2,-54,-55,-56,-57,39,-59,-60,-61,-62,-63,-64,-65,-66,39,-69,39,28,-24,39,39,28,-30,-38,39,-23,28,-41,28,28,-6,28,-37,28,39,-6,-6,28,-48,-52,28,-32,-42,-6,-45,-51,39,39,28,-34,-44,28,28,28,28,-20,28,-50,28,-6,39,-19,-49,-6,-47,-46,28,-53,]),'NOT':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,57,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,86,88,94,99,102,104,105,106,107,108,109,110,117,118,121,122,123,124,125,126,131,133,134,135,137,142,143,144,145,146,147,148,149,150,151,152,153,155,156,157,158,160,162,163,],[29,29,-5,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,29,-76,-73,-33,29,29,29,-43,29,29,-70,-71,-72,-74,-75,29,-3,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-29,-76,29,29,29,-27,-67,-68,-2,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-69,-31,29,-24,29,-30,-38,-23,29,-41,29,29,-6,29,-37,29,-6,-6,29,-48,-52,29,-32,-42,-6,-45,-51,29,-34,-44,29,29,29,29,-20,29,-50,29,-6,-19,-49,-6,-47,-46,29,-53,]),'LPAREN':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,57,63,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,86,88,91,94,98,99,102,104,105,106,107,108,109,110,111,117,118,121,122,123,124,125,126,131,133,134,135,137,142,143,144,145,146,147,148,149,150,151,152,153,155,156,157,158,160,162,163,],[18,18,-5,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,51,18,56,-73,-33,18,18,18,-43,18,18,-70,-71,-72,-74,-75,18,-3,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-29,56,18,18,18,97,-27,-67,-68,-2,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-69,-31,100,18,-24,107,18,115,-30,-38,-23,18,-41,18,18,-6,18,126,-37,18,-6,-6,18,-48,-52,18,-32,-42,-6,-45,-51,18,-34,-44,18,18,18,18,-20,18,-50,18,-6,-19,-49,-6,-47,-46,18,-53,]),'NUMBER':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,57,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,86,88,94,99,102,104,105,106,107,108,109,110,117,118,121,122,123,124,125,126,131,133,134,135,137,142,143,144,145,146,147,148,149,150,151,152,153,155,156,157,158,160,162,163,],[30,30,-5,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,30,-76,-73,-33,30,30,30,-43,30,30,-70,-71,-72,-74,-75,30,-3,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-29,-76,30,30,30,-27,-67,-68,-2,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-69,-31,30,-24,30,-30,-38,-23,30,-41,30,30,-6,30,-37,30,-6,-6,30,-48,-52,30,-32,-42,-6,-45,-51,30,-34,-44,30,30,30,30,-20,30,-50,30,-6,-19,-49,-6,-47,-46,30,-53,]),'FLOAT':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,57,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,86,88,94,99,102,104,105,106,107,108,109,110,117,118,121,122,123,124,125,126,131,133,134,135,137,142,143,144,145,146,147,148,149,150,151,152,153,155,156,157,158,160,162,163,],[31,31,-5,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,31,-76,-73,-33,31,31,31,-43,31,31,-70,-71,-72,-74,-75,31,-3,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-29,-76,31,31,31,-27,-67,-68,-2,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-69,-31,31,-24,31,-30,-38,-23,31,-41,31,31,-6,31,-37,31,-6,-6,31,-48,-52,31,-32,-42,-6,-45,-51,31,-34,-44,31,31,31,31,-20,31,-50,31,-6,-19,-49,-6,-47,-46,31,-53,]),'INT':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,57,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,86,88,94,99,102,104,105,106,107,108,109,110,117,118,121,122,123,124,125,126,131,133,134,135,137,142,143,144,145,146,147,148,149,150,151,152,153,155,156,157,158,160,162,163,],[32,32,-5,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,32,-76,-73,-33,32,32,32,-43,32,32,-70,-71,-72,-74,-75,32,-3,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-29,-76,32,32,32,-27,-67,-68,-2,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-69,-31,32,-24,32,-30,-38,-23,32,-41,32,32,-6,32,-37,32,-6,-6,32,-48,-52,32,-32,-42,-6,-45,-51,32,-34,-44,32,32,32,32,-20,32,-50,32,-6,-19,-49,-6,-47,-46,32,-53,]),'STRING':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,57,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,86,88,94,99,100,102,104,105,106,107,108,109,110,115,117,118,121,122,123,124,125,126,131,133,134,135,137,142,143,144,145,146,147,148,149,150,151,152,153,155,156,157,158,160,162,163,],[20,20,-5,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,20,-76,-73,-33,20,20,20,-43,20,20,-70,-71,-72,-74,-75,20,-3,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-29,-76,20,20,20,-27,-67,-68,-2,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-69,-31,20,-24,20,-30,116,-38,-23,20,-41,20,20,-6,20,130,-37,20,-6,-6,20,-48,-52,20,-32,-42,-6,-45,-51,20,-34,-44,20,20,20,20,-20,20,-50,20,-6,-19,-49,-6,-47,-46,20,-53,]),'TRUE':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,57,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,86,88,94,99,102,104,105,106,107,108,109,110,117,118,121,122,123,124,125,126,131,133,134,135,137,142,143,144,145,146,147,148,149,150,151,152,153,155,156,157,158,160,162,163,],[33,33,-5,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,33,-76,-73,-33,33,33,33,-43,33,33,-70,-71,-72,-74,-75,33,-3,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-29,-76,33,33,33,-27,-67,-68,-2,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-69,-31,33,-24,33,-30,-38,-23,33,-41,33,33,-6,33,-37,33,-6,-6,33,-48,-52,33,-32,-42,-6,-45,-51,33,-34,-44,33,33,33,33,-20,33,-50,33,-6,-19,-49,-6,-47,-46,33,-53,]),'FALSE':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,57,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,86,88,94,99,102,104,105,106,107,108,109,110,117,118,121,122,123,124,125,126,131,133,134,135,137,142,143,144,145,146,147,148,149,150,151,152,153,155,156,157,158,160,162,163,],[34,34,-5,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,34,-76,-73,-33,34,34,34,-43,34,34,-70,-71,-72,-74,-75,34,-3,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-29,-76,34,34,34,-27,-67,-68,-2,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-69,-31,34,-24,34,-30,-38,-23,34,-41,34,34,-6,34,-37,34,-6,-6,34,-48,-52,34,-32,-42,-6,-45,-51,34,-34,-44,34,34,34,34,-20,34,-50,34,-6,-19,-49,-6,-47,-46,34,-53,]),'NEWLINE':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,19,20,21,26,27,30,31,32,33,34,36,37,53,54,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,88,94,95,99,102,104,106,108,109,110,117,121,122,124,125,129,131,133,134,135,137,141,142,143,144,145,146,148,149,150,151,152,153,155,156,157,158,160,161,162,163,],[36,-5,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-76,-73,-33,-28,-43,-70,-71,-72,-74,-75,-6,-3,-29,-76,-27,-67,-68,-2,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-69,-31,-24,108,110,-30,-38,-23,-41,-6,-6,-6,-37,-6,-6,-48,-52,142,-32,-42,-6,-45,-51,148,-6,-34,-44,150,152,-6,-20,-6,-50,-6,-6,-19,-49,-6,-47,-46,162,-6,-53,]),'ELIF':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,19,20,21,26,27,30,31,32,33,34,36,37,53,54,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,88,94,99,102,104,106,108,109,110,117,121,122,124,125,131,133,134,135,137,142,143,144,145,146,148,149,150,151,152,153,155,156,157,158,160,162,163,],[-4,-5,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-76,-73,-33,-28,-43,-70,-71,-72,-74,-75,-6,-3,-29,-76,-27,-67,-68,-2,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-69,-31,-24,-6,-30,-38,-23,-41,-6,123,-6,-37,123,-6,-48,-52,-32,-42,-6,-45,-51,-6,-34,-44,-6,-6,-6,-20,-6,-50,-6,123,-19,-49,123,-47,-46,-6,-53,]),'ELSE':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,19,20,21,26,27,30,31,32,33,34,36,37,53,54,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,88,94,99,102,104,106,108,109,110,117,121,122,124,125,131,133,134,135,137,142,143,144,145,146,148,149,150,151,152,153,155,156,157,158,160,162,163,],[-4,-5,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-76,-73,-33,-28,-43,-70,-71,-72,-74,-75,-6,-3,-29,-76,-27,-67,-68,-2,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-69,-31,-24,-6,-30,-38,-23,-41,-6,-6,-6,-37,-6,136,-48,-52,-32,-42,136,-45,-51,-6,-34,-44,-6,-6,-6,-20,-6,-50,-6,-6,-19,-49,-6,-47,-46,-6,-53,]),'PLUS':([13,16,19,20,30,31,32,33,34,52,53,54,60,61,64,65,66,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,88,89,90,103,104,106,120,133,138,139,154,],[-29,38,-76,-73,-70,-71,-72,-74,-75,38,-29,-76,38,38,38,-67,38,-54,-55,-56,-57,38,-59,-60,-61,-62,-63,-64,-65,-66,38,-69,38,-24,38,38,38,-23,-41,38,-42,38,38,38,]),'TIMES':([13,16,19,20,30,31,32,33,34,52,53,54,60,61,64,65,66,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,88,89,90,103,104,106,120,133,138,139,154,],[-29,40,-76,-73,-70,-71,-72,-74,-75,40,-29,-76,40,40,40,-67,40,40,40,-56,-57,40,-59,-60,-61,-62,-63,-64,-65,-66,40,-69,40,-24,40,40,40,-23,-41,40,-42,40,40,40,]),'DIVIDE':([13,16,19,20,30,31,32,33,34,52,53,54,60,61,64,65,66,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,88,89,90,103,104,106,120,133,138,139,154,],[-29,41,-76,-73,-70,-71,-72,-74,-75,41,-29,-76,41,41,41,-67,41,41,41,-56,-57,41,-59,-60,-61,-62,-63,-64,-65,-66,41,-69,41,-24,41,41,41,-23,-41,41,-42,41,41,41,]),'POWER':([13,16,19,20,30,31,32,33,34,52,53,54,60,61,64,65,66,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,88,89,90,103,104,106,120,133,138,139,154,],[-29,42,-76,-73,-70,-71,-72,-74,-75,42,-29,-76,42,42,42,-67,42,-54,-55,-56,-57,42,-59,-60,-61,-62,-63,-64,-65,-66,42,-69,42,-24,42,42,42,-23,-41,42,-42,42,42,42,]),'AND':([13,16,19,20,30,31,32,33,34,52,53,54,60,61,64,65,66,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,88,89,90,103,104,106,120,133,138,139,154,],[-29,43,-76,-73,-70,-71,-72,-74,-75,43,-29,-76,43,43,43,43,43,43,43,43,43,43,-59,-60,-61,-62,-63,-64,-65,-66,43,-69,43,-24,43,43,43,-23,-41,43,-42,43,43,43,]),'OR':([13,16,19,20,30,31,32,33,34,52,53,54,60,61,64,65,66,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,88,89,90,103,104,106,120,133,138,139,154,],[-29,44,-76,-73,-70,-71,-72,-74,-75,44,-29,-76,44,44,44,44,44,44,44,44,44,44,-59,-60,-61,-62,-63,-64,-65,-66,44,-69,44,-24,44,44,44,-23,-41,44,-42,44,44,44,]),'EQUAL_EQUAL':([13,16,19,20,30,31,32,33,34,52,53,54,60,61,64,65,66,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,88,89,90,103,104,106,120,133,138,139,154,],[-29,45,-76,-73,-70,-71,-72,-74,-75,45,-29,-76,45,45,45,45,45,45,45,45,45,45,45,45,-61,-62,-63,-64,-65,-66,45,-69,45,-24,45,45,45,-23,-41,45,-42,45,45,45,]),'NOT_EQUAL':([13,16,19,20,30,31,32,33,34,52,53,54,60,61,64,65,66,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,88,89,90,103,104,106,120,133,138,139,154,],[-29,46,-76,-73,-70,-71,-72,-74,-75,46,-29,-76,46,46,46,46,46,46,46,46,46,46,46,46,-61,-62,-63,-64,-65,-66,46,-69,46,-24,46,46,46,-23,-41,46,-42,46,46,46,]),'GREATER':([13,16,19,20,30,31,32,33,34,52,53,54,60,61,64,65,66,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,88,89,90,103,104,106,120,133,138,139,154,],[-29,47,-76,-73,-70,-71,-72,-74,-75,47,-29,-76,47,47,47,47,47,47,47,47,47,47,47,47,-61,-62,-63,-64,-65,-66,47,-69,47,-24,47,47,47,-23,-41,47,-42,47,47,47,]),'GREATER_EQUAL':([13,16,19,20,30,31,32,33,34,52,53,54,60,61,64,65,66,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,88,89,90,103,104,106,120,133,138,139,154,],[-29,48,-76,-73,-70,-71,-72,-74,-75,48,-29,-76,48,48,48,48,48,48,48,48,48,48,48,48,-61,-62,-63,-64,-65,-66,48,-69,48,-24,48,48,48,-23,-41,48,-42,48,48,48,]),'LESS':([13,16,19,20,30,31,32,33,34,52,53,54,60,61,64,65,66,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,88,89,90,103,104,106,120,133,138,139,154,],[-29,49,-76,-73,-70,-71,-72,-74,-75,49,-29,-76,49,49,49,49,49,49,49,49,49,49,49,49,-61,-62,-63,-64,-65,-66,49,-69,49,-24,49,49,49,-23,-41,49,-42,49,49,49,]),'LESS_EQUAL':([13,16,19,20,30,31,32,33,34,52,53,54,60,61,64,65,66,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,88,89,90,103,104,106,120,133,138,139,154,],[-29,50,-76,-73,-70,-71,-72,-74,-75,50,-29,-76,50,50,50,50,50,50,50,50,50,50,50,50,-61,-62,-63,-64,-65,-66,50,-69,50,-24,50,50,50,-23,-41,50,-42,50,50,50,]),'EQUALS':([19,35,92,93,],[55,67,-35,-36,]),'LBRACKET':([19,54,55,],[57,57,86,]),'DOT':([19,54,],[58,58,]),'COMMA':([19,20,30,31,32,33,34,53,54,65,66,69,70,71,72,73,74,75,76,77,78,79,80,81,83,88,89,92,103,104,106,112,133,139,],[59,-73,-70,-71,-72,-74,-75,-29,-76,-67,-68,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-69,-24,105,59,118,-23,-41,127,-42,147,]),'RPAREN':([20,30,31,32,33,34,52,53,54,56,65,66,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,87,88,89,97,104,106,112,113,116,119,120,130,133,140,154,],[-73,-70,-71,-72,-74,-75,83,-29,-76,88,-67,-68,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,99,-69,104,-24,-25,114,-23,-41,-21,128,131,-26,133,143,-42,-22,159,]),'COLON':([20,30,31,32,33,34,53,54,60,61,65,66,69,70,71,72,73,74,75,76,77,78,79,80,81,83,88,104,106,114,128,133,136,138,159,],[-73,-70,-71,-72,-74,-75,-29,-76,94,95,-67,-68,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-69,-24,-23,-41,129,141,-42,145,146,161,]),'RBRACKET':([20,30,31,32,33,34,53,54,65,66,69,70,71,72,73,74,75,76,77,78,79,80,81,83,86,88,90,101,103,104,106,132,133,],[-73,-70,-71,-72,-74,-75,-29,-76,-67,-68,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-69,102,-24,106,117,-39,-23,-41,-40,-42,]),'INPUT':([55,67,],[85,98,]),'APPEND':([58,],[91,]),'IN':([62,],[96,]),'RANGE':([96,],[111,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statements':([0,3,36,94,108,110,142,145,146,148,150,152,162,],[2,37,68,109,121,125,149,151,153,155,156,157,163,]),'statement':([0,3,36,94,108,110,142,145,146,148,150,152,162,],[3,3,3,3,3,3,3,3,3,3,3,3,3,]),'empty':([0,3,36,94,108,109,110,121,122,134,142,145,146,148,150,152,153,157,162,],[4,4,4,4,4,124,4,124,137,137,4,4,4,4,4,4,124,124,4,]),'print_stmt':([0,3,36,94,108,110,142,145,146,148,150,152,162,],[5,5,5,5,5,5,5,5,5,5,5,5,5,]),'assignment_stmt':([0,3,36,94,108,110,142,145,146,148,150,152,162,],[6,6,6,6,6,6,6,6,6,6,6,6,6,]),'input_stmt':([0,3,36,94,108,110,142,145,146,148,150,152,162,],[7,7,7,7,7,7,7,7,7,7,7,7,7,]),'if_stmt':([0,3,36,94,108,110,142,145,146,148,150,152,162,],[8,8,8,8,8,8,8,8,8,8,8,8,8,]),'while_stmt':([0,3,36,94,108,110,142,145,146,148,150,152,162,],[9,9,9,9,9,9,9,9,9,9,9,9,9,]),'for_stmt':([0,3,36,94,108,110,142,145,146,148,150,152,162,],[10,10,10,10,10,10,10,10,10,10,10,10,10,]),'list_stmt':([0,3,36,94,108,110,142,145,146,148,150,152,162,],[11,11,11,11,11,11,11,11,11,11,11,11,11,]),'function_def':([0,3,36,94,108,110,142,145,146,148,150,152,162,],[12,12,12,12,12,12,12,12,12,12,12,12,12,]),'function_call':([0,3,18,22,23,26,28,29,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,55,56,57,86,94,105,107,108,110,118,123,126,142,145,146,147,148,150,152,162,],[13,13,53,53,53,53,53,53,13,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,13,53,53,13,13,53,53,53,13,13,13,53,13,13,13,13,]),'return_stmt':([0,3,36,94,108,110,142,145,146,148,150,152,162,],[14,14,14,14,14,14,14,14,14,14,14,14,14,]),'break_stmt':([0,3,36,94,108,110,142,145,146,148,150,152,162,],[15,15,15,15,15,15,15,15,15,15,15,15,15,]),'expression':([0,3,18,22,23,26,28,29,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,55,56,57,86,94,105,107,108,110,118,123,126,142,145,146,147,148,150,152,162,],[16,16,52,60,61,64,65,66,16,69,70,71,72,73,74,75,76,77,78,79,80,81,82,84,89,90,103,16,89,120,16,16,103,138,139,16,16,16,154,16,16,16,16,]),'input_multiple':([0,3,36,94,108,110,142,145,146,148,150,152,162,],[21,21,21,21,21,21,21,21,21,21,21,21,21,]),'id_list':([0,3,36,59,94,108,110,142,145,146,148,150,152,162,],[35,35,35,93,35,35,35,35,35,35,35,35,35,35,]),'argument_list':([56,105,],[87,119,]),'list_elements':([86,118,],[101,132,]),'parameter_list':([97,127,],[113,140,]),'elif_stmt':([109,121,153,157,],[122,134,158,160,]),'else_stmt':([122,134,],[135,144,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements','program',1,'p_program','parser.py',15),
  ('statements -> statement NEWLINE statements','statements',3,'p_statements','parser.py',19),
  ('statements -> statement statements','statements',2,'p_statements','parser.py',20),
  ('statements -> statement','statements',1,'p_statements','parser.py',21),
  ('statements -> empty','statements',1,'p_statements','parser.py',22),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',33),
  ('statement -> print_stmt','statement',1,'p_statement','parser.py',38),
  ('statement -> assignment_stmt','statement',1,'p_statement','parser.py',39),
  ('statement -> input_stmt','statement',1,'p_statement','parser.py',40),
  ('statement -> if_stmt','statement',1,'p_statement','parser.py',41),
  ('statement -> while_stmt','statement',1,'p_statement','parser.py',42),
  ('statement -> for_stmt','statement',1,'p_statement','parser.py',43),
  ('statement -> list_stmt','statement',1,'p_statement','parser.py',44),
  ('statement -> function_def','statement',1,'p_statement','parser.py',45),
  ('statement -> function_call','statement',1,'p_statement','parser.py',46),
  ('statement -> return_stmt','statement',1,'p_statement','parser.py',47),
  ('statement -> break_stmt','statement',1,'p_statement','parser.py',48),
  ('statement -> expression','statement',1,'p_statement','parser.py',49),
  ('function_def -> DEF ID LPAREN parameter_list RPAREN COLON NEWLINE statements','function_def',8,'p_function_def','parser.py',53),
  ('function_def -> DEF ID LPAREN RPAREN COLON NEWLINE statements','function_def',7,'p_function_def','parser.py',54),
  ('parameter_list -> ID','parameter_list',1,'p_parameter_list','parser.py',61),
  ('parameter_list -> ID COMMA parameter_list','parameter_list',3,'p_parameter_list','parser.py',62),
  ('function_call -> ID LPAREN argument_list RPAREN','function_call',4,'p_function_call','parser.py',70),
  ('function_call -> ID LPAREN RPAREN','function_call',3,'p_function_call','parser.py',71),
  ('argument_list -> expression','argument_list',1,'p_argument_list','parser.py',78),
  ('argument_list -> expression COMMA argument_list','argument_list',3,'p_argument_list','parser.py',79),
  ('return_stmt -> RETURN expression','return_stmt',2,'p_return_stmt','parser.py',87),
  ('return_stmt -> RETURN','return_stmt',1,'p_return_stmt','parser.py',88),
  ('expression -> function_call','expression',1,'p_expression_function_call','parser.py',96),
  ('print_stmt -> PRINT LPAREN expression RPAREN','print_stmt',4,'p_print_stmt','parser.py',101),
  ('assignment_stmt -> ID EQUALS expression','assignment_stmt',3,'p_assignment_stmt','parser.py',105),
  ('input_stmt -> ID EQUALS INPUT LPAREN STRING RPAREN','input_stmt',6,'p_input_stmt','parser.py',109),
  ('input_stmt -> input_multiple','input_stmt',1,'p_input_stmt','parser.py',110),
  ('input_multiple -> id_list EQUALS INPUT LPAREN STRING RPAREN','input_multiple',6,'p_input_multiple','parser.py',117),
  ('id_list -> ID COMMA ID','id_list',3,'p_id_list','parser.py',121),
  ('id_list -> ID COMMA id_list','id_list',3,'p_id_list','parser.py',122),
  ('list_stmt -> ID EQUALS LBRACKET list_elements RBRACKET','list_stmt',5,'p_list_stmt','parser.py',131),
  ('list_stmt -> ID EQUALS LBRACKET RBRACKET','list_stmt',4,'p_list_stmt','parser.py',132),
  ('list_elements -> expression','list_elements',1,'p_list_elements','parser.py',139),
  ('list_elements -> expression COMMA list_elements','list_elements',3,'p_list_elements','parser.py',140),
  ('expression -> ID LBRACKET expression RBRACKET','expression',4,'p_list_operation','parser.py',147),
  ('expression -> ID DOT APPEND LPAREN expression RPAREN','expression',6,'p_list_operation','parser.py',148),
  ('break_stmt -> BREAK','break_stmt',1,'p_break_stmt','parser.py',156),
  ('if_stmt -> IF expression COLON NEWLINE statements elif_stmt else_stmt','if_stmt',7,'p_if_stmt','parser.py',161),
  ('if_stmt -> IF expression COLON statements elif_stmt else_stmt','if_stmt',6,'p_if_stmt','parser.py',162),
  ('elif_stmt -> ELIF expression COLON NEWLINE statements elif_stmt','elif_stmt',6,'p_elif_stmt','parser.py',170),
  ('elif_stmt -> ELIF expression COLON statements elif_stmt','elif_stmt',5,'p_elif_stmt','parser.py',171),
  ('elif_stmt -> empty','elif_stmt',1,'p_elif_stmt','parser.py',172),
  ('else_stmt -> ELSE COLON NEWLINE statements','else_stmt',4,'p_else_stmt','parser.py',182),
  ('else_stmt -> ELSE COLON statements','else_stmt',3,'p_else_stmt','parser.py',183),
  ('else_stmt -> empty','else_stmt',1,'p_else_stmt','parser.py',184),
  ('while_stmt -> WHILE expression COLON NEWLINE statements','while_stmt',5,'p_while_stmt','parser.py',193),
  ('for_stmt -> FOR ID IN RANGE LPAREN expression COMMA expression RPAREN COLON NEWLINE statements','for_stmt',12,'p_for_stmt','parser.py',197),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','parser.py',202),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','parser.py',203),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','parser.py',204),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','parser.py',205),
  ('expression -> expression POWER expression','expression',3,'p_expression_binop','parser.py',206),
  ('expression -> expression AND expression','expression',3,'p_expression_binop','parser.py',207),
  ('expression -> expression OR expression','expression',3,'p_expression_binop','parser.py',208),
  ('expression -> expression EQUAL_EQUAL expression','expression',3,'p_expression_binop','parser.py',209),
  ('expression -> expression NOT_EQUAL expression','expression',3,'p_expression_binop','parser.py',210),
  ('expression -> expression GREATER expression','expression',3,'p_expression_binop','parser.py',211),
  ('expression -> expression GREATER_EQUAL expression','expression',3,'p_expression_binop','parser.py',212),
  ('expression -> expression LESS expression','expression',3,'p_expression_binop','parser.py',213),
  ('expression -> expression LESS_EQUAL expression','expression',3,'p_expression_binop','parser.py',214),
  ('expression -> MINUS expression','expression',2,'p_expression_unary','parser.py',218),
  ('expression -> NOT expression','expression',2,'p_expression_unary','parser.py',219),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','parser.py',223),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser.py',227),
  ('expression -> FLOAT','expression',1,'p_expression_number','parser.py',228),
  ('expression -> INT','expression',1,'p_expression_number','parser.py',229),
  ('expression -> STRING','expression',1,'p_expression_string','parser.py',233),
  ('expression -> TRUE','expression',1,'p_expression_boolean','parser.py',237),
  ('expression -> FALSE','expression',1,'p_expression_boolean','parser.py',238),
  ('expression -> ID','expression',1,'p_expression_identifier','parser.py',242),
]
