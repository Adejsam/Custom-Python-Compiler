
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightPOWERleftPLUSMINUSleftTIMESDIVIDErightUMINUSleftANDORleftEQUAL_EQUALNOT_EQUALGREATERGREATER_EQUALLESSLESS_EQUALAND APPEND BREAK COLON COMMA COMMENT DEF DIVIDE DOT ELIF ELSE EQUALS EQUAL_EQUAL FALSE FLOAT FOR GREATER GREATER_EQUAL ID IF IN INPUT INT LBRACE LBRACKET LESS LESS_EQUAL LPAREN MINUS NEW NEWLINE NOT NOT_EQUAL NUMBER OR PLUS POWER PRINT RANGE RBRACE RBRACKET RETURN RPAREN SEMICOLON STRING TIMES TRUE TYPE WHILEprogram : statementsstatements : statement NEWLINE statements\n                  | statement statements\n                  | statement\n                  | emptyempty :statement : print_stmt\n                 | assignment_stmt\n                 | input_stmt\n                 | if_stmt\n                 | while_stmt\n                 | for_stmt\n                 | list_stmt\n                 | function_def\n                 | function_call\n                 | return_stmt\n                 | break_stmt\n                 | expressionfunction_def : DEF ID LPAREN parameter_list RPAREN COLON NEWLINE statements\n                   | DEF ID LPAREN RPAREN COLON NEWLINE statementsparameter_list : ID\n                     | ID COMMA parameter_listfunction_call : ID LPAREN argument_list RPAREN\n                    | ID LPAREN RPARENargument_list : expression\n                    | expression COMMA argument_listreturn_stmt : RETURN expression\n                  | RETURNprint_stmt : PRINT LPAREN print_arguments RPARENprint_arguments : expression\n                       | expression COMMA print_argumentsassignment_stmt : ID EQUALS expressioninput_stmt : ID EQUALS INPUT LPAREN STRING RPAREN\n                 | input_multipleinput_multiple : id_list EQUALS INPUT LPAREN STRING RPARENid_list : ID COMMA ID\n               | ID COMMA id_listlist_stmt : ID EQUALS LBRACKET list_elements RBRACKET\n                | ID EQUALS LBRACKET RBRACKETlist_elements : expression\n                    | expression COMMA list_elementsexpression : ID LBRACKET expression RBRACKET\n                 | ID DOT APPEND LPAREN expression RPARENbreak_stmt : BREAKif_stmt : IF expression COLON NEWLINE statements elif_stmt else_stmt\n               | IF expression COLON statements elif_stmt else_stmtelif_stmt : ELIF expression COLON NEWLINE statements elif_stmt\n                 | ELIF expression COLON statements elif_stmt\n                 | emptyelse_stmt : ELSE COLON NEWLINE statements\n                 | ELSE COLON statements\n                 | emptywhile_stmt : WHILE expression COLON NEWLINE statementsfor_stmt : FOR ID IN RANGE LPAREN expression COMMA expression RPAREN COLON NEWLINE statementsexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression\n                  | expression POWER expression\n                  | expression AND expression\n                  | expression OR expression\n                  | expression EQUAL_EQUAL expression\n                  | expression NOT_EQUAL expression\n                  | expression GREATER expression\n                  | expression GREATER_EQUAL expression\n                  | expression LESS expression\n                  | expression LESS_EQUAL expressionexpression : MINUS expression %prec UMINUS\n                  | NOT expressionexpression : LPAREN expression RPARENexpression : NUMBER\n                  | FLOAT\n                  | INTexpression : STRINGexpression : TRUE\n                  | FALSEexpression : ID'
    
_lr_action_items = {'$end':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,19,20,21,26,27,30,31,32,33,34,36,37,53,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,83,84,88,94,99,103,105,107,109,110,111,119,123,124,126,127,133,135,136,137,139,144,145,146,147,148,150,151,152,153,154,155,157,158,159,160,162,164,165,],[-6,0,-1,-4,-5,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-77,-74,-34,-28,-44,-71,-72,-73,-75,-76,-6,-3,-77,-27,-68,-69,-2,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-70,-32,-24,-6,-29,-39,-23,-42,-6,-6,-6,-38,-6,-6,-49,-53,-33,-43,-6,-46,-52,-6,-35,-45,-6,-6,-6,-20,-6,-51,-6,-6,-19,-50,-6,-48,-47,-6,-54,]),'PRINT':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,19,20,21,26,27,30,31,32,33,34,36,37,53,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,83,84,88,94,99,103,105,107,109,110,111,119,123,124,126,127,133,135,136,137,139,144,145,146,147,148,150,151,152,153,154,155,157,158,159,160,162,164,165,],[17,17,-5,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-77,-74,-34,-28,-44,-71,-72,-73,-75,-76,17,-3,-77,-27,-68,-69,-2,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-70,-32,-24,17,-29,-39,-23,-42,17,-6,17,-38,-6,-6,-49,-53,-33,-43,-6,-46,-52,17,-35,-45,17,17,17,-20,17,-51,17,-6,-19,-50,-6,-48,-47,17,-54,]),'ID':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,58,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,83,84,86,88,94,97,99,100,103,105,106,107,108,109,110,111,119,120,123,124,125,126,127,128,129,133,135,136,137,139,144,145,146,147,148,149,150,151,152,153,154,155,157,158,159,160,162,164,165,],[19,19,-5,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,53,-77,-74,-34,53,53,61,62,53,-44,53,53,-71,-72,-73,-75,-76,19,-3,53,53,53,53,53,53,53,53,53,53,53,53,53,53,-77,53,53,53,92,-27,-68,-69,-2,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-70,-32,53,-24,19,113,-29,53,-39,-23,53,-42,53,19,-6,19,-38,53,-6,-6,53,-49,-53,53,113,-33,-43,-6,-46,-52,19,-35,-45,19,19,53,19,-20,19,-51,19,-6,-19,-50,-6,-48,-47,19,-54,]),'IF':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,19,20,21,26,27,30,31,32,33,34,36,37,53,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,83,84,88,94,99,103,105,107,109,110,111,119,123,124,126,127,133,135,136,137,139,144,145,146,147,148,150,151,152,153,154,155,157,158,159,160,162,164,165,],[22,22,-5,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-77,-74,-34,-28,-44,-71,-72,-73,-75,-76,22,-3,-77,-27,-68,-69,-2,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-70,-32,-24,22,-29,-39,-23,-42,22,-6,22,-38,-6,-6,-49,-53,-33,-43,-6,-46,-52,22,-35,-45,22,22,22,-20,22,-51,22,-6,-19,-50,-6,-48,-47,22,-54,]),'WHILE':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,19,20,21,26,27,30,31,32,33,34,36,37,53,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,83,84,88,94,99,103,105,107,109,110,111,119,123,124,126,127,133,135,136,137,139,144,145,146,147,148,150,151,152,153,154,155,157,158,159,160,162,164,165,],[23,23,-5,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-77,-74,-34,-28,-44,-71,-72,-73,-75,-76,23,-3,-77,-27,-68,-69,-2,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-70,-32,-24,23,-29,-39,-23,-42,23,-6,23,-38,-6,-6,-49,-53,-33,-43,-6,-46,-52,23,-35,-45,23,23,23,-20,23,-51,23,-6,-19,-50,-6,-48,-47,23,-54,]),'FOR':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,19,20,21,26,27,30,31,32,33,34,36,37,53,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,83,84,88,94,99,103,105,107,109,110,111,119,123,124,126,127,133,135,136,137,139,144,145,146,147,148,150,151,152,153,154,155,157,158,159,160,162,164,165,],[24,24,-5,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-77,-74,-34,-28,-44,-71,-72,-73,-75,-76,24,-3,-77,-27,-68,-69,-2,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-70,-32,-24,24,-29,-39,-23,-42,24,-6,24,-38,-6,-6,-49,-53,-33,-43,-6,-46,-52,24,-35,-45,24,24,24,-20,24,-51,24,-6,-19,-50,-6,-48,-47,24,-54,]),'DEF':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,19,20,21,26,27,30,31,32,33,34,36,37,53,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,83,84,88,94,99,103,105,107,109,110,111,119,123,124,126,127,133,135,136,137,139,144,145,146,147,148,150,151,152,153,154,155,157,158,159,160,162,164,165,],[25,25,-5,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-77,-74,-34,-28,-44,-71,-72,-73,-75,-76,25,-3,-77,-27,-68,-69,-2,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-70,-32,-24,25,-29,-39,-23,-42,25,-6,25,-38,-6,-6,-49,-53,-33,-43,-6,-46,-52,25,-35,-45,25,25,25,-20,25,-51,25,-6,-19,-50,-6,-48,-47,25,-54,]),'RETURN':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,19,20,21,26,27,30,31,32,33,34,36,37,53,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,83,84,88,94,99,103,105,107,109,110,111,119,123,124,126,127,133,135,136,137,139,144,145,146,147,148,150,151,152,153,154,155,157,158,159,160,162,164,165,],[26,26,-5,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-77,-74,-34,-28,-44,-71,-72,-73,-75,-76,26,-3,-77,-27,-68,-69,-2,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-70,-32,-24,26,-29,-39,-23,-42,26,-6,26,-38,-6,-6,-49,-53,-33,-43,-6,-46,-52,26,-35,-45,26,26,26,-20,26,-51,26,-6,-19,-50,-6,-48,-47,26,-54,]),'BREAK':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,19,20,21,26,27,30,31,32,33,34,36,37,53,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,83,84,88,94,99,103,105,107,109,110,111,119,123,124,126,127,133,135,136,137,139,144,145,146,147,148,150,151,152,153,154,155,157,158,159,160,162,164,165,],[27,27,-5,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-77,-74,-34,-28,-44,-71,-72,-73,-75,-76,27,-3,-77,-27,-68,-69,-2,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-70,-32,-24,27,-29,-39,-23,-42,27,-6,27,-38,-6,-6,-49,-53,-33,-43,-6,-46,-52,27,-35,-45,27,27,27,-20,27,-51,27,-6,-19,-50,-6,-48,-47,27,-54,]),'MINUS':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,59,60,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,82,83,84,86,88,89,90,94,99,100,103,104,105,106,107,108,109,110,111,119,120,122,123,124,125,126,127,128,133,135,136,137,139,140,141,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,162,164,165,],[28,28,-5,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,39,28,-77,-74,-34,28,28,28,-44,28,28,-71,-72,-73,-75,-76,28,-3,28,28,28,28,28,28,28,28,28,28,28,28,28,28,39,-77,28,28,28,39,39,39,-68,39,-2,-55,-56,-57,-58,39,-60,-61,-62,-63,-64,-65,-66,-67,39,-70,39,28,-24,39,39,28,-29,28,-39,39,-23,28,-42,28,28,-6,28,-38,28,39,-6,-6,28,-49,-53,28,-33,-43,-6,-46,-52,39,39,28,-35,-45,28,28,28,28,-20,28,-51,28,-6,39,-19,-50,-6,-48,-47,28,-54,]),'NOT':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,83,84,86,88,94,99,100,103,105,106,107,108,109,110,111,119,120,123,124,125,126,127,128,133,135,136,137,139,144,145,146,147,148,149,150,151,152,153,154,155,157,158,159,160,162,164,165,],[29,29,-5,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,29,-77,-74,-34,29,29,29,-44,29,29,-71,-72,-73,-75,-76,29,-3,29,29,29,29,29,29,29,29,29,29,29,29,29,29,-77,29,29,29,-27,-68,-69,-2,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-70,-32,29,-24,29,-29,29,-39,-23,29,-42,29,29,-6,29,-38,29,-6,-6,29,-49,-53,29,-33,-43,-6,-46,-52,29,-35,-45,29,29,29,29,-20,29,-51,29,-6,-19,-50,-6,-48,-47,29,-54,]),'LPAREN':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,62,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,83,84,85,86,88,91,94,98,99,100,103,105,106,107,108,109,110,111,112,119,120,123,124,125,126,127,128,133,135,136,137,139,144,145,146,147,148,149,150,151,152,153,154,155,157,158,159,160,162,164,165,],[18,18,-5,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,51,18,55,-74,-34,18,18,18,-44,18,18,-71,-72,-73,-75,-76,18,-3,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-77,18,18,18,97,-27,-68,-69,-2,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-70,-32,101,18,-24,108,18,116,-29,18,-39,-23,18,-42,18,18,-6,18,128,-38,18,-6,-6,18,-49,-53,18,-33,-43,-6,-46,-52,18,-35,-45,18,18,18,18,-20,18,-51,18,-6,-19,-50,-6,-48,-47,18,-54,]),'NUMBER':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,83,84,86,88,94,99,100,103,105,106,107,108,109,110,111,119,120,123,124,125,126,127,128,133,135,136,137,139,144,145,146,147,148,149,150,151,152,153,154,155,157,158,159,160,162,164,165,],[30,30,-5,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,30,-77,-74,-34,30,30,30,-44,30,30,-71,-72,-73,-75,-76,30,-3,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-77,30,30,30,-27,-68,-69,-2,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-70,-32,30,-24,30,-29,30,-39,-23,30,-42,30,30,-6,30,-38,30,-6,-6,30,-49,-53,30,-33,-43,-6,-46,-52,30,-35,-45,30,30,30,30,-20,30,-51,30,-6,-19,-50,-6,-48,-47,30,-54,]),'FLOAT':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,83,84,86,88,94,99,100,103,105,106,107,108,109,110,111,119,120,123,124,125,126,127,128,133,135,136,137,139,144,145,146,147,148,149,150,151,152,153,154,155,157,158,159,160,162,164,165,],[31,31,-5,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,31,-77,-74,-34,31,31,31,-44,31,31,-71,-72,-73,-75,-76,31,-3,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-77,31,31,31,-27,-68,-69,-2,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-70,-32,31,-24,31,-29,31,-39,-23,31,-42,31,31,-6,31,-38,31,-6,-6,31,-49,-53,31,-33,-43,-6,-46,-52,31,-35,-45,31,31,31,31,-20,31,-51,31,-6,-19,-50,-6,-48,-47,31,-54,]),'INT':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,83,84,86,88,94,99,100,103,105,106,107,108,109,110,111,119,120,123,124,125,126,127,128,133,135,136,137,139,144,145,146,147,148,149,150,151,152,153,154,155,157,158,159,160,162,164,165,],[32,32,-5,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,32,-77,-74,-34,32,32,32,-44,32,32,-71,-72,-73,-75,-76,32,-3,32,32,32,32,32,32,32,32,32,32,32,32,32,32,-77,32,32,32,-27,-68,-69,-2,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-70,-32,32,-24,32,-29,32,-39,-23,32,-42,32,32,-6,32,-38,32,-6,-6,32,-49,-53,32,-33,-43,-6,-46,-52,32,-35,-45,32,32,32,32,-20,32,-51,32,-6,-19,-50,-6,-48,-47,32,-54,]),'STRING':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,83,84,86,88,94,99,100,101,103,105,106,107,108,109,110,111,116,119,120,123,124,125,126,127,128,133,135,136,137,139,144,145,146,147,148,149,150,151,152,153,154,155,157,158,159,160,162,164,165,],[20,20,-5,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,20,-77,-74,-34,20,20,20,-44,20,20,-71,-72,-73,-75,-76,20,-3,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-77,20,20,20,-27,-68,-69,-2,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-70,-32,20,-24,20,-29,20,118,-39,-23,20,-42,20,20,-6,20,132,-38,20,-6,-6,20,-49,-53,20,-33,-43,-6,-46,-52,20,-35,-45,20,20,20,20,-20,20,-51,20,-6,-19,-50,-6,-48,-47,20,-54,]),'TRUE':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,83,84,86,88,94,99,100,103,105,106,107,108,109,110,111,119,120,123,124,125,126,127,128,133,135,136,137,139,144,145,146,147,148,149,150,151,152,153,154,155,157,158,159,160,162,164,165,],[33,33,-5,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,33,-77,-74,-34,33,33,33,-44,33,33,-71,-72,-73,-75,-76,33,-3,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-77,33,33,33,-27,-68,-69,-2,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-70,-32,33,-24,33,-29,33,-39,-23,33,-42,33,33,-6,33,-38,33,-6,-6,33,-49,-53,33,-33,-43,-6,-46,-52,33,-35,-45,33,33,33,33,-20,33,-51,33,-6,-19,-50,-6,-48,-47,33,-54,]),'FALSE':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,83,84,86,88,94,99,100,103,105,106,107,108,109,110,111,119,120,123,124,125,126,127,128,133,135,136,137,139,144,145,146,147,148,149,150,151,152,153,154,155,157,158,159,160,162,164,165,],[34,34,-5,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,34,-77,-74,-34,34,34,34,-44,34,34,-71,-72,-73,-75,-76,34,-3,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-77,34,34,34,-27,-68,-69,-2,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-70,-32,34,-24,34,-29,34,-39,-23,34,-42,34,34,-6,34,-38,34,-6,-6,34,-49,-53,34,-33,-43,-6,-46,-52,34,-35,-45,34,34,34,34,-20,34,-51,34,-6,-19,-50,-6,-48,-47,34,-54,]),'NEWLINE':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,19,20,21,26,27,30,31,32,33,34,36,37,53,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,83,84,88,94,95,99,103,105,107,109,110,111,119,123,124,126,127,131,133,135,136,137,139,143,144,145,146,147,148,150,151,152,153,154,155,157,158,159,160,162,163,164,165,],[36,-5,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-77,-74,-34,-28,-44,-71,-72,-73,-75,-76,-6,-3,-77,-27,-68,-69,-2,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-70,-32,-24,109,111,-29,-39,-23,-42,-6,-6,-6,-38,-6,-6,-49,-53,144,-33,-43,-6,-46,-52,150,-6,-35,-45,152,154,-6,-20,-6,-51,-6,-6,-19,-50,-6,-48,-47,164,-6,-54,]),'ELIF':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,19,20,21,26,27,30,31,32,33,34,36,37,53,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,83,84,88,94,99,103,105,107,109,110,111,119,123,124,126,127,133,135,136,137,139,144,145,146,147,148,150,151,152,153,154,155,157,158,159,160,162,164,165,],[-4,-5,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-77,-74,-34,-28,-44,-71,-72,-73,-75,-76,-6,-3,-77,-27,-68,-69,-2,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-70,-32,-24,-6,-29,-39,-23,-42,-6,125,-6,-38,125,-6,-49,-53,-33,-43,-6,-46,-52,-6,-35,-45,-6,-6,-6,-20,-6,-51,-6,125,-19,-50,125,-48,-47,-6,-54,]),'ELSE':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,19,20,21,26,27,30,31,32,33,34,36,37,53,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,83,84,88,94,99,103,105,107,109,110,111,119,123,124,126,127,133,135,136,137,139,144,145,146,147,148,150,151,152,153,154,155,157,158,159,160,162,164,165,],[-4,-5,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-77,-74,-34,-28,-44,-71,-72,-73,-75,-76,-6,-3,-77,-27,-68,-69,-2,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-70,-32,-24,-6,-29,-39,-23,-42,-6,-6,-6,-38,-6,138,-49,-53,-33,-43,138,-46,-52,-6,-35,-45,-6,-6,-6,-20,-6,-51,-6,-6,-19,-50,-6,-48,-47,-6,-54,]),'PLUS':([16,19,20,30,31,32,33,34,52,53,59,60,63,64,65,68,69,70,71,72,73,74,75,76,77,78,79,80,82,83,84,89,90,104,107,122,135,140,141,156,],[38,-77,-74,-71,-72,-73,-75,-76,38,-77,38,38,38,-68,38,-55,-56,-57,-58,38,-60,-61,-62,-63,-64,-65,-66,-67,38,-70,38,38,38,38,-42,38,-43,38,38,38,]),'TIMES':([16,19,20,30,31,32,33,34,52,53,59,60,63,64,65,68,69,70,71,72,73,74,75,76,77,78,79,80,82,83,84,89,90,104,107,122,135,140,141,156,],[40,-77,-74,-71,-72,-73,-75,-76,40,-77,40,40,40,-68,40,40,40,-57,-58,40,-60,-61,-62,-63,-64,-65,-66,-67,40,-70,40,40,40,40,-42,40,-43,40,40,40,]),'DIVIDE':([16,19,20,30,31,32,33,34,52,53,59,60,63,64,65,68,69,70,71,72,73,74,75,76,77,78,79,80,82,83,84,89,90,104,107,122,135,140,141,156,],[41,-77,-74,-71,-72,-73,-75,-76,41,-77,41,41,41,-68,41,41,41,-57,-58,41,-60,-61,-62,-63,-64,-65,-66,-67,41,-70,41,41,41,41,-42,41,-43,41,41,41,]),'POWER':([16,19,20,30,31,32,33,34,52,53,59,60,63,64,65,68,69,70,71,72,73,74,75,76,77,78,79,80,82,83,84,89,90,104,107,122,135,140,141,156,],[42,-77,-74,-71,-72,-73,-75,-76,42,-77,42,42,42,-68,42,-55,-56,-57,-58,42,-60,-61,-62,-63,-64,-65,-66,-67,42,-70,42,42,42,42,-42,42,-43,42,42,42,]),'AND':([16,19,20,30,31,32,33,34,52,53,59,60,63,64,65,68,69,70,71,72,73,74,75,76,77,78,79,80,82,83,84,89,90,104,107,122,135,140,141,156,],[43,-77,-74,-71,-72,-73,-75,-76,43,-77,43,43,43,43,43,43,43,43,43,43,-60,-61,-62,-63,-64,-65,-66,-67,43,-70,43,43,43,43,-42,43,-43,43,43,43,]),'OR':([16,19,20,30,31,32,33,34,52,53,59,60,63,64,65,68,69,70,71,72,73,74,75,76,77,78,79,80,82,83,84,89,90,104,107,122,135,140,141,156,],[44,-77,-74,-71,-72,-73,-75,-76,44,-77,44,44,44,44,44,44,44,44,44,44,-60,-61,-62,-63,-64,-65,-66,-67,44,-70,44,44,44,44,-42,44,-43,44,44,44,]),'EQUAL_EQUAL':([16,19,20,30,31,32,33,34,52,53,59,60,63,64,65,68,69,70,71,72,73,74,75,76,77,78,79,80,82,83,84,89,90,104,107,122,135,140,141,156,],[45,-77,-74,-71,-72,-73,-75,-76,45,-77,45,45,45,45,45,45,45,45,45,45,45,45,-62,-63,-64,-65,-66,-67,45,-70,45,45,45,45,-42,45,-43,45,45,45,]),'NOT_EQUAL':([16,19,20,30,31,32,33,34,52,53,59,60,63,64,65,68,69,70,71,72,73,74,75,76,77,78,79,80,82,83,84,89,90,104,107,122,135,140,141,156,],[46,-77,-74,-71,-72,-73,-75,-76,46,-77,46,46,46,46,46,46,46,46,46,46,46,46,-62,-63,-64,-65,-66,-67,46,-70,46,46,46,46,-42,46,-43,46,46,46,]),'GREATER':([16,19,20,30,31,32,33,34,52,53,59,60,63,64,65,68,69,70,71,72,73,74,75,76,77,78,79,80,82,83,84,89,90,104,107,122,135,140,141,156,],[47,-77,-74,-71,-72,-73,-75,-76,47,-77,47,47,47,47,47,47,47,47,47,47,47,47,-62,-63,-64,-65,-66,-67,47,-70,47,47,47,47,-42,47,-43,47,47,47,]),'GREATER_EQUAL':([16,19,20,30,31,32,33,34,52,53,59,60,63,64,65,68,69,70,71,72,73,74,75,76,77,78,79,80,82,83,84,89,90,104,107,122,135,140,141,156,],[48,-77,-74,-71,-72,-73,-75,-76,48,-77,48,48,48,48,48,48,48,48,48,48,48,48,-62,-63,-64,-65,-66,-67,48,-70,48,48,48,48,-42,48,-43,48,48,48,]),'LESS':([16,19,20,30,31,32,33,34,52,53,59,60,63,64,65,68,69,70,71,72,73,74,75,76,77,78,79,80,82,83,84,89,90,104,107,122,135,140,141,156,],[49,-77,-74,-71,-72,-73,-75,-76,49,-77,49,49,49,49,49,49,49,49,49,49,49,49,-62,-63,-64,-65,-66,-67,49,-70,49,49,49,49,-42,49,-43,49,49,49,]),'LESS_EQUAL':([16,19,20,30,31,32,33,34,52,53,59,60,63,64,65,68,69,70,71,72,73,74,75,76,77,78,79,80,82,83,84,89,90,104,107,122,135,140,141,156,],[50,-77,-74,-71,-72,-73,-75,-76,50,-77,50,50,50,50,50,50,50,50,50,50,50,50,-62,-63,-64,-65,-66,-67,50,-70,50,50,50,50,-42,50,-43,50,50,50,]),'EQUALS':([19,35,92,93,],[54,66,-36,-37,]),'LBRACKET':([19,53,54,],[56,56,86,]),'DOT':([19,53,],[57,57,]),'COMMA':([19,20,30,31,32,33,34,53,64,65,68,69,70,71,72,73,74,75,76,77,78,79,80,82,83,89,92,104,107,113,135,141,],[58,-74,-71,-72,-73,-75,-76,-77,-68,-69,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,100,-70,106,58,120,-42,129,-43,149,]),'RPAREN':([20,30,31,32,33,34,52,53,55,64,65,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,87,89,97,107,113,114,117,118,121,122,132,135,142,156,],[-74,-71,-72,-73,-75,-76,83,-77,88,-68,-69,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,99,-30,-70,105,-25,115,-42,-21,130,-31,133,-26,135,145,-43,-22,161,]),'COLON':([20,30,31,32,33,34,53,59,60,64,65,68,69,70,71,72,73,74,75,76,77,78,79,80,83,107,115,130,135,138,140,161,],[-74,-71,-72,-73,-75,-76,-77,94,95,-68,-69,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-70,-42,131,143,-43,147,148,163,]),'RBRACKET':([20,30,31,32,33,34,53,64,65,68,69,70,71,72,73,74,75,76,77,78,79,80,83,86,90,102,104,107,134,135,],[-74,-71,-72,-73,-75,-76,-77,-68,-69,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-70,103,107,119,-40,-42,-41,-43,]),'INPUT':([54,66,],[85,98,]),'APPEND':([57,],[91,]),'IN':([61,],[96,]),'RANGE':([96,],[112,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statements':([0,3,36,94,109,111,144,147,148,150,152,154,164,],[2,37,67,110,123,127,151,153,155,157,158,159,165,]),'statement':([0,3,36,94,109,111,144,147,148,150,152,154,164,],[3,3,3,3,3,3,3,3,3,3,3,3,3,]),'empty':([0,3,36,94,109,110,111,123,124,136,144,147,148,150,152,154,155,159,164,],[4,4,4,4,4,126,4,126,139,139,4,4,4,4,4,4,126,126,4,]),'print_stmt':([0,3,36,94,109,111,144,147,148,150,152,154,164,],[5,5,5,5,5,5,5,5,5,5,5,5,5,]),'assignment_stmt':([0,3,36,94,109,111,144,147,148,150,152,154,164,],[6,6,6,6,6,6,6,6,6,6,6,6,6,]),'input_stmt':([0,3,36,94,109,111,144,147,148,150,152,154,164,],[7,7,7,7,7,7,7,7,7,7,7,7,7,]),'if_stmt':([0,3,36,94,109,111,144,147,148,150,152,154,164,],[8,8,8,8,8,8,8,8,8,8,8,8,8,]),'while_stmt':([0,3,36,94,109,111,144,147,148,150,152,154,164,],[9,9,9,9,9,9,9,9,9,9,9,9,9,]),'for_stmt':([0,3,36,94,109,111,144,147,148,150,152,154,164,],[10,10,10,10,10,10,10,10,10,10,10,10,10,]),'list_stmt':([0,3,36,94,109,111,144,147,148,150,152,154,164,],[11,11,11,11,11,11,11,11,11,11,11,11,11,]),'function_def':([0,3,36,94,109,111,144,147,148,150,152,154,164,],[12,12,12,12,12,12,12,12,12,12,12,12,12,]),'function_call':([0,3,36,94,109,111,144,147,148,150,152,154,164,],[13,13,13,13,13,13,13,13,13,13,13,13,13,]),'return_stmt':([0,3,36,94,109,111,144,147,148,150,152,154,164,],[14,14,14,14,14,14,14,14,14,14,14,14,14,]),'break_stmt':([0,3,36,94,109,111,144,147,148,150,152,154,164,],[15,15,15,15,15,15,15,15,15,15,15,15,15,]),'expression':([0,3,18,22,23,26,28,29,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,54,55,56,86,94,100,106,108,109,111,120,125,128,144,147,148,149,150,152,154,164,],[16,16,52,59,60,63,64,65,16,68,69,70,71,72,73,74,75,76,77,78,79,80,82,84,89,90,104,16,82,89,122,16,16,104,140,141,16,16,16,156,16,16,16,16,]),'input_multiple':([0,3,36,94,109,111,144,147,148,150,152,154,164,],[21,21,21,21,21,21,21,21,21,21,21,21,21,]),'id_list':([0,3,36,58,94,109,111,144,147,148,150,152,154,164,],[35,35,35,93,35,35,35,35,35,35,35,35,35,35,]),'print_arguments':([51,100,],[81,117,]),'argument_list':([55,106,],[87,121,]),'list_elements':([86,120,],[102,134,]),'parameter_list':([97,129,],[114,142,]),'elif_stmt':([110,123,155,159,],[124,136,160,162,]),'else_stmt':([124,136,],[137,146,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements','program',1,'p_program','parser.py',17),
  ('statements -> statement NEWLINE statements','statements',3,'p_statements','parser.py',22),
  ('statements -> statement statements','statements',2,'p_statements','parser.py',23),
  ('statements -> statement','statements',1,'p_statements','parser.py',24),
  ('statements -> empty','statements',1,'p_statements','parser.py',25),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',38),
  ('statement -> print_stmt','statement',1,'p_statement','parser.py',43),
  ('statement -> assignment_stmt','statement',1,'p_statement','parser.py',44),
  ('statement -> input_stmt','statement',1,'p_statement','parser.py',45),
  ('statement -> if_stmt','statement',1,'p_statement','parser.py',46),
  ('statement -> while_stmt','statement',1,'p_statement','parser.py',47),
  ('statement -> for_stmt','statement',1,'p_statement','parser.py',48),
  ('statement -> list_stmt','statement',1,'p_statement','parser.py',49),
  ('statement -> function_def','statement',1,'p_statement','parser.py',50),
  ('statement -> function_call','statement',1,'p_statement','parser.py',51),
  ('statement -> return_stmt','statement',1,'p_statement','parser.py',52),
  ('statement -> break_stmt','statement',1,'p_statement','parser.py',53),
  ('statement -> expression','statement',1,'p_statement','parser.py',54),
  ('function_def -> DEF ID LPAREN parameter_list RPAREN COLON NEWLINE statements','function_def',8,'p_function_def','parser.py',59),
  ('function_def -> DEF ID LPAREN RPAREN COLON NEWLINE statements','function_def',7,'p_function_def','parser.py',60),
  ('parameter_list -> ID','parameter_list',1,'p_parameter_list','parser.py',69),
  ('parameter_list -> ID COMMA parameter_list','parameter_list',3,'p_parameter_list','parser.py',70),
  ('function_call -> ID LPAREN argument_list RPAREN','function_call',4,'p_function_call','parser.py',79),
  ('function_call -> ID LPAREN RPAREN','function_call',3,'p_function_call','parser.py',80),
  ('argument_list -> expression','argument_list',1,'p_argument_list','parser.py',89),
  ('argument_list -> expression COMMA argument_list','argument_list',3,'p_argument_list','parser.py',90),
  ('return_stmt -> RETURN expression','return_stmt',2,'p_return_stmt','parser.py',99),
  ('return_stmt -> RETURN','return_stmt',1,'p_return_stmt','parser.py',100),
  ('print_stmt -> PRINT LPAREN print_arguments RPAREN','print_stmt',4,'p_print_stmt','parser.py',109),
  ('print_arguments -> expression','print_arguments',1,'p_print_arguments','parser.py',114),
  ('print_arguments -> expression COMMA print_arguments','print_arguments',3,'p_print_arguments','parser.py',115),
  ('assignment_stmt -> ID EQUALS expression','assignment_stmt',3,'p_assignment_stmt','parser.py',123),
  ('input_stmt -> ID EQUALS INPUT LPAREN STRING RPAREN','input_stmt',6,'p_input_stmt','parser.py',128),
  ('input_stmt -> input_multiple','input_stmt',1,'p_input_stmt','parser.py',129),
  ('input_multiple -> id_list EQUALS INPUT LPAREN STRING RPAREN','input_multiple',6,'p_input_multiple','parser.py',137),
  ('id_list -> ID COMMA ID','id_list',3,'p_id_list','parser.py',142),
  ('id_list -> ID COMMA id_list','id_list',3,'p_id_list','parser.py',143),
  ('list_stmt -> ID EQUALS LBRACKET list_elements RBRACKET','list_stmt',5,'p_list_stmt','parser.py',150),
  ('list_stmt -> ID EQUALS LBRACKET RBRACKET','list_stmt',4,'p_list_stmt','parser.py',151),
  ('list_elements -> expression','list_elements',1,'p_list_elements','parser.py',160),
  ('list_elements -> expression COMMA list_elements','list_elements',3,'p_list_elements','parser.py',161),
  ('expression -> ID LBRACKET expression RBRACKET','expression',4,'p_list_operation','parser.py',170),
  ('expression -> ID DOT APPEND LPAREN expression RPAREN','expression',6,'p_list_operation','parser.py',171),
  ('break_stmt -> BREAK','break_stmt',1,'p_break_stmt','parser.py',180),
  ('if_stmt -> IF expression COLON NEWLINE statements elif_stmt else_stmt','if_stmt',7,'p_if_stmt','parser.py',185),
  ('if_stmt -> IF expression COLON statements elif_stmt else_stmt','if_stmt',6,'p_if_stmt','parser.py',186),
  ('elif_stmt -> ELIF expression COLON NEWLINE statements elif_stmt','elif_stmt',6,'p_elif_stmt','parser.py',195),
  ('elif_stmt -> ELIF expression COLON statements elif_stmt','elif_stmt',5,'p_elif_stmt','parser.py',196),
  ('elif_stmt -> empty','elif_stmt',1,'p_elif_stmt','parser.py',197),
  ('else_stmt -> ELSE COLON NEWLINE statements','else_stmt',4,'p_else_stmt','parser.py',208),
  ('else_stmt -> ELSE COLON statements','else_stmt',3,'p_else_stmt','parser.py',209),
  ('else_stmt -> empty','else_stmt',1,'p_else_stmt','parser.py',210),
  ('while_stmt -> WHILE expression COLON NEWLINE statements','while_stmt',5,'p_while_stmt','parser.py',221),
  ('for_stmt -> FOR ID IN RANGE LPAREN expression COMMA expression RPAREN COLON NEWLINE statements','for_stmt',12,'p_for_stmt','parser.py',226),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','parser.py',231),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','parser.py',232),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','parser.py',233),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','parser.py',234),
  ('expression -> expression POWER expression','expression',3,'p_expression_binop','parser.py',235),
  ('expression -> expression AND expression','expression',3,'p_expression_binop','parser.py',236),
  ('expression -> expression OR expression','expression',3,'p_expression_binop','parser.py',237),
  ('expression -> expression EQUAL_EQUAL expression','expression',3,'p_expression_binop','parser.py',238),
  ('expression -> expression NOT_EQUAL expression','expression',3,'p_expression_binop','parser.py',239),
  ('expression -> expression GREATER expression','expression',3,'p_expression_binop','parser.py',240),
  ('expression -> expression GREATER_EQUAL expression','expression',3,'p_expression_binop','parser.py',241),
  ('expression -> expression LESS expression','expression',3,'p_expression_binop','parser.py',242),
  ('expression -> expression LESS_EQUAL expression','expression',3,'p_expression_binop','parser.py',243),
  ('expression -> MINUS expression','expression',2,'p_expression_unary','parser.py',248),
  ('expression -> NOT expression','expression',2,'p_expression_unary','parser.py',249),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','parser.py',254),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser.py',259),
  ('expression -> FLOAT','expression',1,'p_expression_number','parser.py',260),
  ('expression -> INT','expression',1,'p_expression_number','parser.py',261),
  ('expression -> STRING','expression',1,'p_expression_string','parser.py',266),
  ('expression -> TRUE','expression',1,'p_expression_boolean','parser.py',271),
  ('expression -> FALSE','expression',1,'p_expression_boolean','parser.py',272),
  ('expression -> ID','expression',1,'p_expression_identifier','parser.py',277),
]
